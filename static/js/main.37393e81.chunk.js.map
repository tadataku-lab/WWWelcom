{"version":3,"sources":["components/Header/Header.tsx","components/GoogleMap/GoogleMap.tsx","logic/geolocation.ts","components/Toasts/Toasts.tsx","App.tsx","logic/hotpepper.ts","logic/distance.ts","serviceWorker.ts","index.tsx"],"names":["Header","props","Navbar","fixed","id","expand","variant","Brand","onClick","e","setPagetype","Toggle","aria-controls","Collapse","Nav","className","ty","Link","switchLink","pagetype","maps","google","GoogleMap","useState","map","setMap","setMarkers","userMarker","setUserMarker","useEffect","_map","Map","document","getElementById","zoom","center","lat","lng","crd","watchCrd","latitude","longitude","setCenter","setPosition","LatLng","_userMarker","Marker","position","animation","Animation","BOUNCE","icon","path","SymbolPath","CIRCLE","fillColor","strokeColor","scale","uminfo","InfoWindow","content","addListener","open","close","placelist","places","place","label","name","DROP","style","height","width","getPosition","setFunc","navigator","geolocation","getCurrentPosition","pos","coords","console","log","Toast","closeButton","title","Math","round","dist","Body","body","Toasts","group","credit","toasts","toast","key","HotpepperCredit","href","ListView","Row","margin","Object","keys","placelists","toObject","pl_key","Col","md","lg","get","pd","detail","MapView","sm","Card","Img","src","Title","Text","App","setPlacelists","setCrd","setWatchCrd","selectedGroup","watchPosition","getSometimes","msec","setTimeout","query","callbuck","query_str","reduce","pre","window","sc","createElement","type","process","parent","getElementsByTagName","parentNode","insertBefore","fetchHotPepper","range","order","json","shop_info","results","shop","origin","destination","Number","geometry","spherical","computeDistanceBetween","catch","sort","a","b","p","set","marginTop","Container","fluid","visibility","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","URL","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.37393e81.chunk.js","sourcesContent":["import React from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport {PageType} from '../../App';\nimport './Header.css';\n\ntype HeaderProps = {\n  pagetype: PageType,\n  setPagetype: (ty: PageType) => void\n};\n\nconst Header: React.FC<HeaderProps> = (props) => {\n\n  const switchLink = (ty: PageType) => {\n    switch(ty){\n      case 'map':\n        return <Nav.Link onClick={(e: any) => props.setPagetype('list')}>List</Nav.Link>;\n      case 'list':\n        return <Nav.Link onClick={(e: any) => props.setPagetype('map')}>Map</Nav.Link>\n    }\n  };\n  return (\n    <Navbar fixed='top' id='Header' expand=\"lg\" variant='dark' >\n      <Navbar.Brand onClick={(e: any) => props.setPagetype('list')}>WWWelcome</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {switchLink(props.pagetype)}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n};\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport { PlaceList } from '../../App';\n\nconst maps = google.maps;\n\ntype GoogleMapProps = {\n  placelist: PlaceList | null,\n  watchCrd: Coordinates | null,\n  setCrd: (crd: Coordinates | null) => void\n};\n\nconst GoogleMap: React.FC<GoogleMapProps> = (props) => {\n  const [map, setMap] = useState(null as google.maps.Map | null);\n  const [markers, setMarkers] = useState([] as google.maps.Marker[]);\n  const [userMarker, setUserMarker] = useState(null as google.maps.Marker | null);\n  useEffect(() => {\n    const _map = new maps.Map(document.getElementById('map')!, { zoom: 17, center: { lat: -25.344, lng: 131.036 } })\n    setMap(_map);\n  }, []);\n\n  useEffect(() => {\n    if(map){\n      const crd = props.watchCrd ? { lat: props.watchCrd.latitude, lng: props.watchCrd.longitude } : { lat: -25.344, lng: 131.036 };\n      map.setCenter(crd)\n      if(!userMarker){\n        const _userMarker = new maps.Marker({\n          position: new maps.LatLng(crd),\n          animation: google.maps.Animation.BOUNCE,\n          icon: {\n            path: google.maps.SymbolPath.CIRCLE,\n            fillColor: 'blue',\n            strokeColor: 'blue',\n            scale: 8,\n          },\n          map: map\n        });\n        var uminfo = new google.maps.InfoWindow({\n          content: `\n        <div>現在地</div>\n        `\n        });\n        _userMarker.addListener('mouseover', () => { uminfo.open(map, _userMarker); });\n        _userMarker.addListener('mouseout', () => { uminfo.close(); });\n        setUserMarker(_userMarker);\n      }else{\n        if(props.watchCrd){\n          userMarker.setPosition(new maps.LatLng(props.watchCrd.latitude, props.watchCrd.longitude));\n        }\n        \n      }\n    }\n  }, [props.watchCrd, userMarker, map])\n\n  useEffect(() => {\n    if (map && props.placelist){\n      setMarkers(props.placelist.places.map((place) => new maps.Marker({\n        position: new maps.LatLng(place.crd),\n        label: place.name,\n        animation: google.maps.Animation.DROP,\n        map: map})))\n    }\n  }, [props.placelist, map]);\n  return (\n    <div id='map' style={{ height: '80vh', width: '100%'}}></div>\n  );\n};\n\nexport default GoogleMap;","\n\nexport const getPosition = (setFunc: (crd: Coordinates) => void) => {\n  const success: PositionCallback = (pos: Position) => {\n    setFunc(pos.coords);\n  };\n  const error: PositionErrorCallback = (e: PositionError) => {\n    console.log(e);\n  };\n  navigator.geolocation.getCurrentPosition(success, error);\n};\n\nexport const watchPosition = (setFunc: (crd: Coordinates) => void) => {\n  const success: PositionCallback = (pos: Position) => {\n    setFunc(pos.coords);\n  };\n  const error: PositionErrorCallback = (e: PositionError) => {\n    console.log(e);\n  };\n  navigator.geolocation.watchPosition(success, error);\n};\n","import React from 'react';\nimport { Toast as BToast } from 'react-bootstrap';\nimport \"./Toasts.css\";\n\nexport type ToastData = {\n  title: string;\n  dist: number;\n  body: string;\n};\n\nexport type ToastProps = ToastData & {\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n};\n\nconst Toast: React.FC<ToastProps> = (props: ToastProps) => {\n  return (\n    <BToast onClick={(e) => props.onClick(e)}>\n      <BToast.Header closeButton={false}>\n        <strong className='mr-auto'>{props.title}</strong>\n        <small>{`${Math.round(props.dist)} m`}</small>\n      </BToast.Header>\n      <BToast.Body>\n        {props.body}\n      </BToast.Body>\n    </BToast>\n  );\n};\n\nexport type ToastsProps = {\n  toasts: ToastData[];\n  group: string;\n  credit?: JSX.Element;\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n};\n\nconst Toasts: React.FC<ToastsProps> = (props: ToastsProps) => {\n  return (\n    <div className=\"toasts\">\n      <BToast className=\"Group-header\">\n        <BToast.Body>\n          <strong className='mr-auto'>{props.group}</strong>\n          <small>{props.credit}</small>\n        </BToast.Body>\n      </BToast>\n      {props.toasts.map((toast, key) => <Toast key={key} onClick={props.onClick} {...toast}/>)}\n    </div>\n  );\n};\n\nexport default Toasts;\n","import React, { useState, useEffect } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport GoogleMap from './components/GoogleMap/GoogleMap';\nimport { fetchHotPepper, HotPepperResult } from './logic/hotpepper';\nimport { watchPosition, getPosition } from './logic/geolocation';\nimport { calcDistance } from './logic/distance';\nimport Toasts from './components/Toasts/Toasts';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { Map } from 'immutable'; \n\nconst HotpepperCredit = <> Powered by <a href=\"http://webservice.recruit.co.jp/\">ホットペッパー Webサービス</a> </>;\n\nexport type PageType = 'list' | 'map';\n\nexport type PlaceData = {\n  name: string,\n  detail: string,\n  dist: number,\n  crd: {lat: number, lng: number}\n};\n\nexport type PlaceList = {\n  group: string,\n  places: PlaceData[],\n  credit: JSX.Element\n}\n\ntype ListViewProps = {\n  placelists: Map<string, PlaceList>,\n  onClick: (group: string) => void\n}\n\nconst ListView: React.FC<ListViewProps> = (props) => {\n  return(\n    <Row style={{ margin: 0 }}>\n      {Object.keys(props.placelists.toObject()).map((pl_key: string, key) => (\n        <Col key={key} md={6} lg={3}>\n          <Toasts toasts={props.placelists.get(pl_key)!.places.map((pd) => ({ title: pd.name, dist: pd.dist, body: pd.detail }))} group={props.placelists.get(pl_key)!.group} credit={props.placelists.get(pl_key)!.credit} onClick={()=> props.onClick(props.placelists.get(pl_key)!.group)} />\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\ntype MapViewProps = {\n  placelist: PlaceList | null,\n  watchCrd: Coordinates | null,\n  setCrd: (crd: Coordinates | null) => void\n};\n\nconst MapView: React.FC<MapViewProps> = (props) => {\n  return (\n    <Row>\n      <Col sm={12} md={8}>\n        <GoogleMap {...props}/>\n      </Col>\n      <Col sm={12} md={4}>\n        <Card>\n          <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n          <Card.Body>\n            <Card.Title>Card Title</Card.Title>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the bulk of\n              the card's content.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  )\n};\n\nconst App: React.FC = () => {\n  const [placelists, setPlacelists] = useState(Map({}) as Map<string, PlaceList>);\n  const [pagetype, setPagetype] = useState('list' as PageType);\n  const [crd, setCrd] = useState(null as Coordinates | null);\n  const [watchCrd, setWatchCrd] = useState(null as Coordinates | null);\n  const [selectedGroup, setSelectedGroup] = useState(null as null | string);\n\n  useEffect(() => {\n    watchPosition(setWatchCrd);\n    getPosition(setCrd);\n    const getSometimes = (msec: number) => {\n      setTimeout(() => {\n        getPosition(setCrd);\n        getSometimes(msec);\n      }, msec);\n    };\n    getSometimes(3000);\n  }, []);\n\n  useEffect(() => {\n    if(crd){\n      fetchHotPepper({ lat: crd.latitude, lng: crd.longitude, range: 5, order: 4 }, (json: HotPepperResult) => {\n        console.log(json);\n        const shop_info: PlaceData[] = json.results.shop.map((shop) => {\n          return { name: shop.name, dist: calcDistance({ lat: crd.latitude, lng: crd.longitude }, { lat: Number(shop.lat), lng: Number(shop.lng) }), detail: shop.catch, crd: { lat: Number(shop.lat), lng: Number(shop.lng) } }\n        });\n        shop_info.sort((a, b) => {\n          if (a.dist < b.dist) {\n            return -1;\n          } else if (a.dist > b.dist) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        setPlacelists(p => p.set('付近の飲食店', { group: '付近の飲食店', places: shop_info, credit: HotpepperCredit }))\n      });\n    }\n    \n  }, [crd]);\n\n  const onListClick = (group: string) => {\n    setPagetype('map');\n  };\n\n  return (\n    <div className=\"App\">\n      <Header pagetype={pagetype} setPagetype={setPagetype}/>\n      <div style={{marginTop: '56px'}}>\n        <Container fluid={true} style={{ visibility: pagetype === 'list' ? 'visible' : 'hidden', position: 'absolute'}} >\n          <ListView placelists={placelists} onClick={onListClick}/>\n        </Container>\n        <Container fluid={true} style={{ visibility: pagetype === 'map' ? 'visible' : 'hidden', position: 'absolute', width: '100%', height: '100%'}} >\n          <MapView placelist={selectedGroup ? placelists.get(selectedGroup)! : null} watchCrd={watchCrd} setCrd={setCrd} />\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// Hot Pepper API ( https://webservice.recruit.co.jp/hotpepper/reference.html )\n\nexport type HotPepperQuery = {\n  lat?: number,\n  lng?: number,\n  range?: number,\n  order?: number\n};\n\nexport type HotPepperResult = {\n  results: {\n    api_version: string;\n    results_available: number;\n    results_returned: number;\n    results_start: number;\n    shop: Shop[];\n  }\n};\n\ntype Shop = {\n  id: string,\n  name: string;\n  logo_image: string,\n  name_kana: string,\n  address: string,\n  station_name: string,\n  ktai_coupon: number,\n  lat: number;\n  lng: number;\n  catch: string;\n  photo: {pc: {l: string, m:string, s: string}}\n};\n\nexport const fetchHotPepper = (query: HotPepperQuery, callbuck: (json: HotPepperResult) => void) => {\n  const query_str = Object.keys(query).reduce((pre:string, key: string) => `${pre}&${key}=${query[key as keyof HotPepperQuery]}`, '');\n  (window as any)['HotPepperCallBack'] = callbuck;\n  const sc = document.createElement(\"script\");\n  sc.type = 'text/javascript';\n  sc.src = `https://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${process.env['REACT_APP_HOTPEPPER_API_KEY']}${query_str}&format=jsonp&callback=HotPepperCallBack`;\n  const parent = document.getElementsByTagName(\"script\")[0];\n  parent!.parentNode!.insertBefore(sc, parent);\n};","\nexport const calcDistance = (origin: { lat: number, lng: number }, destination: { lat: number, lng: number }) => {\n  return google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(origin.lat, origin.lng), new google.maps.LatLng(destination.lat, destination.lng));\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}