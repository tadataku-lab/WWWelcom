{"version":3,"sources":["components/Header/Header.tsx","components/GoogleMap/GoogleMap.tsx","components/Detail/Detail.tsx","logic/yahoo.js","logic/geolocation.ts","logic/distance.ts","components/Toasts/Toasts.tsx","App.tsx","logic/hotpepper.ts","serviceWorker.ts","index.tsx"],"names":["Header","props","Navbar","fixed","id","expand","variant","Brand","onClick","e","setPagetype","Nav","className","ty","Link","switchLink","pagetype","Form","Control","as","style","width","marginRight","Button","getPosition","icon","faCrosshairs","maps","google","GoogleMap","useState","map","setMap","markers","setMarkers","userMarker","setUserMarker","distMarker","setDistMarker","distMarkerClickedListener","setDistMarkerClickedListener","markerInfos","setMarkerInfos","useEffect","_map","Map","document","getElementById","zoom","center","lat","lng","event","removeListener","addListener","handler","qa","_distMarker","Marker","position","latLng","animation","Animation","DROP","distInfo","InfoWindow","content","btn","createElement","innerText","_pos","addDomListener","setCrd","setContent","open","crd","panTo","userCrd","setPosition","LatLng","_userMarker","BOUNCE","path","SymbolPath","CIRCLE","fillColor","strokeColor","scale","uminfo","close","placelist","console","log","marker","minfos","places","place","m","minfo","name","push","selectedIndex","length","height","Detail","Card","marginTop","Body","Title","ListGroup","Item","detail","address","Math","round","dist","cnt","yahoo","latitude","longitude","distance","count","category","callback","gcs","callBackName","window","sc","type","src","process","String","parent","getElementsByTagName","parentNode","insertBefore","setFunc","navigator","geolocation","getCurrentPosition","pos","coords","calcDistance","origin","destination","geometry","spherical","computeDistanceBetween","Toast","closeButton","title","body","Toasts","group","credit","toasts","toast","index","key","HotpepperCredit","href","YahooCredit","ListView","Row","margin","Object","keys","placelists","toObject","pl_key","Col","md","lg","get","pd","MapView","sm","App","setPlacelists","setUserCrd","selectedGroup","setSelectedGroup","setSelectedIndex","getSometimes","msec","setTimeout","query","callbuck","query_str","reduce","pre","fetchHotPepper","range","order","json","shop_info","results","shop","Number","catch","sort","a","b","p","set","Feature","fet","Geometry","Coordinates","split","s","Property","Genre","g","Name","cur","Address","Container","fluid","visibility","idx","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","URL","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bc1278c2.chunk.js","sourcesContent":["import React from 'react';\nimport {Nav, Navbar, Button, Form} from 'react-bootstrap';\nimport {PageType} from '../../App';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCrosshairs } from '@fortawesome/free-solid-svg-icons'\n\nimport './Header.css';\n\ntype HeaderProps = {\n  pagetype: PageType,\n  setPagetype: (ty: PageType) => void,\n  getPosition: () => void\n};\n\nconst Header: React.FC<HeaderProps> = (props) => {\n\n  const switchLink = (ty: PageType) => {\n    switch(ty){\n      case 'map':\n        return <Nav.Link onClick={(e: any) => props.setPagetype('list')}>List</Nav.Link>;\n      case 'list':\n        return <Nav.Link onClick={(e: any) => props.setPagetype('map')}>Map</Nav.Link>\n    }\n  };\n  return (\n    <Navbar fixed='top' id='Header' expand=\"lg\" variant='dark' >\n      <Navbar.Brand onClick={(e: any) => props.setPagetype('list')}>WWWelcome</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        {switchLink(props.pagetype)}\n      </Nav>\n      <Form.Control as=\"select\" style={{width: '60px', marginRight: '1vw'}}>\n        <option>JP</option>\n      </Form.Control>\n      <Button onClick={props.getPosition} id='get-position-button'><FontAwesomeIcon icon={faCrosshairs} /></Button>\n    </Navbar>\n  )\n};\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport { PlaceList, Pos } from '../../App';\nimport './GoogleMap.css';\nconst maps = google.maps;\n\ntype GoogleMapProps = {\n  placelist: PlaceList | null,\n  userCrd: Pos | null,\n  crd: Pos | null,\n  selectedIndex: number | null,\n  setCrd: (crd: Pos | null) => void\n};\n\n\nconst GoogleMap: React.FC<GoogleMapProps> = (props) => {\n  const [map, setMap] = useState(null as google.maps.Map | null);\n  const [markers, setMarkers] = useState([] as google.maps.Marker[]);\n  const [userMarker, setUserMarker] = useState(null as google.maps.Marker | null);\n  const [distMarker, setDistMarker] = useState(null as google.maps.Marker | null);\n  const [distMarkerClickedListener, setDistMarkerClickedListener] = useState(null as null | google.maps.MapsEventListener);\n  const [markerInfos, setMarkerInfos] = useState([] as google.maps.InfoWindow[]);\n\n  useEffect(() => {\n    const _map = new maps.Map(document.getElementById('map')!, { zoom: 17, center: { lat: -25.344, lng: 131.036 } });\n    setMap(_map);\n  }, []);\n\n  useEffect(() => {\n    if(map){\n      if(distMarkerClickedListener){\n        maps.event.removeListener(distMarkerClickedListener);\n      }\n      setDistMarkerClickedListener(map.addListener('click', (handler: { latLng: google.maps.LatLng, event: google.maps.MouseEvent, pixel: { x: number, y: number } }, qa: { x: number, y: number }) => {\n        if (distMarker) {\n          distMarker.setMap(null);\n        }\n        const _distMarker = new maps.Marker({\n          position: handler.latLng,\n          animation: google.maps.Animation.DROP,\n          map: map\n        });\n        const distInfo = new google.maps.InfoWindow({content: ''});\n        const btn = document.createElement(\"button\");\n        btn.id = 'dist-btn'\n        btn.className = 'btn btn-primary';\n        btn.innerText = 'この周辺を探す';\n        const _pos = { lat: handler.latLng.lat(), lng: handler.latLng.lng() };\n        google.maps.event.addDomListener(btn, \"click\", () => {\n          props.setCrd(_pos);\n        });\n        distInfo.setContent(btn);\n        distInfo.open(map, _distMarker);\n        setDistMarker(_distMarker);\n      }));\n    }\n  // eslint-disable-next-line\n  }, [map, distMarker]);\n\n  useEffect(() => {\n    if(map && props.crd){\n      map.panTo(props.crd);\n    }\n  }, [map, props.crd]);\n\n  useEffect(() => {\n    if(map){\n      const crd = props.userCrd ? { lat: props.userCrd.lat, lng: props.userCrd.lng } : { lat: -25.344, lng: 131.036 };\n      if(!userMarker){\n        const _userMarker = new maps.Marker({\n          position: new maps.LatLng(crd),\n          animation: google.maps.Animation.BOUNCE,\n          icon: {\n            path: google.maps.SymbolPath.CIRCLE,\n            fillColor: 'blue',\n            strokeColor: 'blue',\n            scale: 8,\n          },\n          map: map\n        });\n        var uminfo = new google.maps.InfoWindow({\n          content: `\n        <div class='info-window'>現在地</div>\n        `\n        });\n        _userMarker.addListener('mouseover', () => { uminfo.open(map, _userMarker); });\n        _userMarker.addListener('mouseout', () => { uminfo.close(); });\n        _userMarker.addListener('mouseup', () => { uminfo.open(map, _userMarker); });\n        _userMarker.addListener('mousedown', () => { uminfo.open(map, _userMarker); });\n        setUserMarker(_userMarker);\n      }else{\n        if(props.userCrd){\n          userMarker.setPosition(new maps.LatLng(props.userCrd.lat, props.userCrd.lng));\n        }\n        \n      }\n    }\n  }, [props.userCrd, userMarker, map])\n  useEffect(() => {\n    if (map && props.placelist){\n      console.log(props.placelist)\n      markers.map((marker) => marker.setMap(null));\n      const minfos = [] as google.maps.InfoWindow[];\n      setMarkers(props.placelist.places.map((place) => {\n        const m = new maps.Marker({\n          position: new maps.LatLng(place.crd),\n          animation: google.maps.Animation.DROP,\n          map: map\n        });\n        var minfo = new google.maps.InfoWindow({\n          content: `\n        <div class='info-window'>${place.name}</div>\n        `\n        });\n        m.addListener('mouseover', () => { minfo.open(map, m); });\n        m.addListener('mousedown', () => { minfo.open(map, m); });\n        m.addListener('mouseout', () => { minfo.close(); });\n        minfos.push(minfo);\n        return m;\n      }));\n      setMarkerInfos(minfos);\n    }\n  // eslint-disable-next-line\n  }, [props.placelist, map]);\n  useEffect(() => {\n    console.log(props.selectedIndex)\n    console.log(markerInfos)\n    if(map && (props.selectedIndex !== null) && markerInfos.length !== 0){\n      markerInfos[props.selectedIndex].open(map, markers[props.selectedIndex]);\n    }\n  }, [map, props.selectedIndex, markerInfos, markers]);\n  return (\n    <div id='map' style={{ height: '80vh', width: '100%'}}></div>\n  );\n};\n\nexport default GoogleMap;","import React from 'react';\nimport { PlaceData } from '../../App';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nexport type DetailProps = {\n  place: PlaceData\n};\n\nconst Detail: React.FC<DetailProps> = (props) => {\n  return(\n    <Card style={{marginTop: '5px'}}>\n      <Card.Body>\n        <Card.Title>{props.place.name}</Card.Title>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>{props.place.detail}</ListGroup.Item>\n          <ListGroup.Item>{props.place.address}</ListGroup.Item>\n          <ListGroup.Item>{`ここから${Math.round(props.place.dist)}m です．`}</ListGroup.Item>\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Detail;","let cnt = 0;\n\nexport const yahoo = (latitude, longitude, distance = 0, count = 10, category, callback) => {\n    var gcs = \"0\";\n    switch (category) {\n        case 'JPFood':\n            gcs = \"0101,0106,0107001,0108,0109\";\n            break;\n        case 'ForFood':\n            gcs = \"0102,0104,0105,0107002,0107003,0107004,0107005\";\n            break;\n        case 'drink':\n            gcs = \"0110,0119,0120,0121,0122\";\n            break;\n        case 'cafe':\n            gcs = \"0114,0115,0116,0117,0118,0123\";\n            break;\n        case 'department':\n            gcs = \"0204\";\n            break;\n        case 'commbinence':\n            gcs = \"0205001\";\n            break;\n        case 'fashion':\n            gcs = \"0209,0419\";\n            break;\n        case 'sports':\n            gcs = \"0301\";\n            break;\n        case 'hotspring':\n            gcs = \"0418\";\n            break;\n        case 'activity':\n            gcs = \"0303,0305,0424\";\n            break;\n        case 'transportation':\n            gcs = \"0306\";\n            break;\n        case 'hospital':\n            gcs = \"0401\";\n            break; case 'school':\n            gcs = \"0406\";\n            break;\n        case 'gov':\n            gcs = \"0422,0423\";\n            break;\n        case 'shelter':\n            gcs = \"0425\";\n            break;\n        default:\n            break\n    }\n    const callBackName = `YahooCallBack${cnt}`;\n    cnt = cnt + 1;\n    window[callBackName] = callback;\n    const sc = document.createElement(\"script\");\n    sc.type = 'text/javascript';\n    sc.src = `https://map.yahooapis.jp/search/local/V1/localSearch?appid=${process.env['REACT_APP_YAHOO_API_KEY']}&output=json\n&lat=${String(latitude)}\n&lon=${String(longitude)}\n&dist=${String(distance)}&sort=geo&results=${String(count)}&gc=${gcs}&callback=${callBackName}`;\n    const parent = document.getElementsByTagName(\"script\")[0];\n    parent.parentNode.insertBefore(sc, parent);\n}","import { Pos } from '../App';\n\n\nexport const getPosition = (setFunc: (_pos: Pos) => void) => {\n  const success: PositionCallback = (pos: Position) => {\n    setFunc({ lat: pos.coords.latitude, lng: pos.coords.longitude});\n  };\n  const error: PositionErrorCallback = (e: PositionError) => {\n    console.log(e);\n  };\n  navigator.geolocation.getCurrentPosition(success, error);\n};\n\nexport const watchPosition = (setFunc: (_pos: Pos) => void) => {\n  const success: PositionCallback = (pos: Position) => {\n    setFunc({ lat: pos.coords.latitude, lng: pos.coords.longitude });\n  };\n  const error: PositionErrorCallback = (e: PositionError) => {\n    console.log(e);\n  };\n  navigator.geolocation.watchPosition(success, error);\n};\n","\nexport const calcDistance = (origin: { lat: number, lng: number }, destination: { lat: number, lng: number }) => {\n  return google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(origin.lat, origin.lng), new google.maps.LatLng(destination.lat, destination.lng));\n}","import React from 'react';\nimport { Toast as BToast } from 'react-bootstrap';\nimport \"./Toasts.css\";\n\nexport type ToastData = {\n  title: string;\n  dist: number;\n  body: string;\n};\n\nexport type ToastProps = ToastData & {\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n};\n\nconst Toast: React.FC<ToastProps> = (props: ToastProps) => {\n  return (\n    <BToast onClick={(e) => props.onClick(e)}>\n      <BToast.Header closeButton={false}>\n        <strong className='mr-auto'>{props.title}</strong>\n        <small>{`${Math.round(props.dist)} m`}</small>\n      </BToast.Header>\n      <BToast.Body>\n        {props.body}\n      </BToast.Body>\n    </BToast>\n  );\n};\n\nexport type ToastsProps = {\n  toasts: ToastData[];\n  group: string;\n  credit?: JSX.Element;\n  onClick: (idx: number) => void\n};\n\nconst Toasts: React.FC<ToastsProps> = (props: ToastsProps) => {\n  return (\n    <div className=\"toasts\">\n      <BToast className=\"Group-header\">\n        <BToast.Body>\n          <strong className='mr-auto'>{props.group}</strong>\n          <small>{props.credit}</small>\n        </BToast.Body>\n      </BToast>\n      {props.toasts.map((toast, index) => <Toast key={index} onClick={(e) => props.onClick(index)} {...toast}/>)}\n    </div>\n  );\n};\n\nexport default Toasts;\n","import React, { useState, useEffect } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport GoogleMap from './components/GoogleMap/GoogleMap';\nimport Detail from './components/Detail/Detail';\nimport { fetchHotPepper, HotPepperResult } from './logic/hotpepper';\nimport { yahoo } from './logic/yahoo';\nimport { getPosition } from './logic/geolocation';\nimport { calcDistance } from './logic/distance';\nimport Toasts from './components/Toasts/Toasts';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Map } from 'immutable'; \n\nconst HotpepperCredit = <> Powered by <a href=\"http://webservice.recruit.co.jp/\">ホットペッパー Webサービス</a> </>;\nconst YahooCredit = <><a href=\"https://developer.yahoo.co.jp/about\">Webサービス by Yahoo! JAPAN</a></>;\n\nexport type Pos = {lat: number, lng: number};\n\nexport type PageType = 'list' | 'map';\n\ntype Fet = {\n  Geometry:{\n    Coordinates: string,\n    Type: string\n  }\n  Gid: string,\n  Id: string,\n  Name: string,\n  CatchCopy: string,\n  Property: {\n    Address: string,\n    Genre: {Code: string, Name: string}[],\n    Tel1: string\n  }\n};\n\ntype YahooResponce = {\n  Feature: Fet[]\n};\n\nexport type PlaceData = {\n  name: string,\n  address: string,\n  detail: string,\n  dist: number,\n  crd: {lat: number, lng: number}\n};\n\nexport type PlaceList = {\n  group: string,\n  places: PlaceData[],\n  credit: JSX.Element\n}\n\ntype ListViewProps = {\n  placelists: Map<string, PlaceList>,\n  onClick: (group: string) => (idx: number) => void\n}\n\nconst ListView: React.FC<ListViewProps> = (props) => {\n  return(\n    <Row style={{ margin: 0 }}>\n      {Object.keys(props.placelists.toObject()).map((pl_key: string, key) => (\n        <Col key={key} md={6} lg={3}>\n          <Toasts toasts={props.placelists.get(pl_key)!.places.map((pd) => ({ title: pd.name, dist: pd.dist, body: pd.detail }))} group={props.placelists.get(pl_key)!.group} credit={props.placelists.get(pl_key)!.credit} onClick={props.onClick(props.placelists.get(pl_key)!.group)} />\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\ntype MapViewProps = {\n  placelist: PlaceList | null,\n  crd: Pos | null,\n  userCrd: Pos | null,\n  selectedIndex: number | null,\n  setCrd: (crd: Pos | null) => void\n};\n\nconst MapView: React.FC<MapViewProps> = (props) => {\n  return (\n    <Row>\n      <Col sm={12} md={8}>\n        <GoogleMap {...props}/>\n      </Col>\n      <Col sm={12} md={4}>\n        {((props.selectedIndex !== null) && props.placelist) ? <Detail place={props.placelist.places[props.selectedIndex]}/> : null}\n      </Col>\n    </Row>\n  )\n};\n\nconst App: React.FC = () => {\n  const [placelists, setPlacelists] = useState(Map({}) as Map<string, PlaceList>);\n  const [pagetype, setPagetype] = useState('list' as PageType);\n  const [crd, setCrd] = useState(null as Pos | null);\n  const [userCrd, setUserCrd] = useState(null as Pos | null);\n  const [selectedGroup, setSelectedGroup] = useState(null as null | string);\n  const [selectedIndex, setSelectedIndex] = useState(null as null | number);\n\n  useEffect(() => {\n    getPosition(setCrd);\n    getPosition(setUserCrd);\n    const getSometimes = (msec: number) => {\n      setTimeout(() => {\n        getPosition(setUserCrd);\n        getSometimes(msec);\n      }, msec);\n    };\n    getSometimes(30000);\n  }, []);\n\n  useEffect(() => {\n    if(crd){\n      fetchHotPepper({ lat: crd.lat, lng: crd.lng, range: 5, order: 4 }, (json: HotPepperResult) => {\n        console.log(json);\n        const shop_info: PlaceData[] = json.results.shop.map((shop) => {\n          return { name: shop.name, dist: calcDistance({ lat: crd.lat, lng: crd.lng }, { lat: Number(shop.lat), lng: Number(shop.lng) }), detail: shop.catch, crd: { lat: Number(shop.lat), lng: Number(shop.lng) }, address: shop.address }\n        });\n        shop_info.sort((a, b) => {\n          if (a.dist < b.dist) {\n            return -1;\n          } else if (a.dist > b.dist) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        setPlacelists(p => p.set('付近の飲食店', { group: '付近の飲食店', places: shop_info, credit: HotpepperCredit }));\n      });\n      yahoo(crd.lat, crd.lng, 500, 10, 'cafe', (json: YahooResponce) => {\n        if(!json.Feature){\n          console.log(json);\n          return \n        }\n        const places: PlaceData[] = json.Feature.map((fet: Fet) => {\n          const [lng, lat] = fet.Geometry.Coordinates.split(',').map((s) => Number(s));\n          const detail = fet.Property.Genre.map((g) => g.Name).reduce((pre, cur) => `${pre}, ${cur}`);\n          return { name: fet.Name, dist: calcDistance({ lat: crd.lat, lng: crd.lng }, { lat: lat, lng: lng }), detail: detail, crd: { lat: lat, lng: lng }, address: fet.Property.Address};\n        });\n        places.sort((a, b) => {\n          if (a.dist < b.dist) {\n            return -1;\n          } else if (a.dist > b.dist) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        setPlacelists(p => p.set('付近のカフェ', { group: '付近のカフェ', places: places, credit: YahooCredit }));\n      });\n      yahoo(crd.lat, crd.lng, 500, 10, 'fashion', (json: YahooResponce) => {\n        if (!json.Feature) {\n          console.log(json);\n          return\n        }\n        console.log(json);\n        const places: PlaceData[] = json.Feature.map((fet: Fet) => {\n          const [lng, lat] = fet.Geometry.Coordinates.split(',').map((s) => Number(s));\n          const detail = fet.Property.Genre.map((g) => g.Name).reduce((pre, cur) => `${pre}, ${cur}`);\n          return { name: fet.Name, dist: calcDistance({ lat: crd.lat, lng: crd.lng }, { lat: lat, lng: lng }), detail: detail, crd: { lat: lat, lng: lng }, address: fet.Property.Address };\n        });\n        places.sort((a, b) => {\n          if (a.dist < b.dist) {\n            return -1;\n          } else if (a.dist > b.dist) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        setPlacelists(p => p.set('付近の洋服屋', { group: '付近の洋服屋', places: places, credit: YahooCredit }));\n        yahoo(crd.lat, crd.lng, 500, 10, 'transportation', (json: YahooResponce) => {\n          if (!json.Feature) {\n            console.log(json);\n            return\n          }\n          const places: PlaceData[] = json.Feature.map((fet: Fet) => {\n            const [lng, lat] = fet.Geometry.Coordinates.split(',').map((s) => Number(s));\n            const detail = fet.Property.Genre.map((g) => g.Name).reduce((pre, cur) => `${pre}, ${cur}`);\n            return { name: fet.Name, dist: calcDistance({ lat: crd.lat, lng: crd.lng }, { lat: lat, lng: lng }), detail: detail, crd: { lat: lat, lng: lng }, address: fet.Property.Address };\n          });\n          places.sort((a, b) => {\n            if (a.dist < b.dist) {\n              return -1;\n            } else if (a.dist > b.dist) {\n              return 1;\n            } else {\n              return 0;\n            }\n          });\n          setPlacelists(p => p.set('付近の交通機関', { group: '付近の交通機関', places: places, credit: YahooCredit }));\n        });\n      });\n    }\n    \n  }, [crd]);\n\n  const onListClick = (group: string) => (idx: number) => {\n    setPagetype('map');\n    setSelectedGroup(group);\n    setSelectedIndex(idx);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header pagetype={pagetype} setPagetype={setPagetype} getPosition={() => getPosition(setCrd)}/>\n      <div style={{marginTop: '56px'}}>\n        <Container fluid={true} style={{ visibility: pagetype === 'list' ? 'visible' : 'hidden', position: 'absolute'}} >\n          <ListView placelists={placelists} onClick={onListClick}/>\n        </Container>\n        <Container fluid={true} style={{ visibility: pagetype === 'map' ? 'visible' : 'hidden', position: 'absolute', width: '100%', height: '100%'}} >\n          <MapView placelist={selectedGroup ? placelists.get(selectedGroup)! : null} selectedIndex={selectedIndex} crd={crd} userCrd={userCrd} setCrd={setCrd} />\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// Hot Pepper API ( https://webservice.recruit.co.jp/hotpepper/reference.html )\n\nexport type HotPepperQuery = {\n  lat?: number,\n  lng?: number,\n  range?: number,\n  order?: number\n};\n\nexport type HotPepperResult = {\n  results: {\n    api_version: string;\n    results_available: number;\n    results_returned: number;\n    results_start: number;\n    shop: Shop[];\n  }\n};\n\ntype Shop = {\n  id: string,\n  name: string;\n  logo_image: string,\n  name_kana: string,\n  address: string,\n  station_name: string,\n  ktai_coupon: number,\n  lat: number;\n  lng: number;\n  catch: string;\n  photo: {pc: {l: string, m:string, s: string}}\n};\n\nexport const fetchHotPepper = (query: HotPepperQuery, callbuck: (json: HotPepperResult) => void) => {\n  const query_str = Object.keys(query).reduce((pre:string, key: string) => `${pre}&${key}=${query[key as keyof HotPepperQuery]}`, '');\n  (window as any)['HotPepperCallBack'] = callbuck;\n  const sc = document.createElement(\"script\");\n  sc.type = 'text/javascript';\n  sc.src = `https://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${process.env['REACT_APP_HOTPEPPER_API_KEY']}${query_str}&format=jsonp&callback=HotPepperCallBack`;\n  const parent = document.getElementsByTagName(\"script\")[0];\n  parent!.parentNode!.insertBefore(sc, parent);\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}