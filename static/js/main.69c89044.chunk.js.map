{"version":3,"sources":["components/Header/Header.tsx","components/GoogleMap/GoogleMap.tsx","components/Detail/Detail.tsx","logic/geolocation.ts","components/Toasts/Toasts.tsx","App.tsx","logic/hotpepper.ts","logic/distance.ts","serviceWorker.ts","index.tsx"],"names":["Header","props","Navbar","fixed","id","expand","variant","Brand","onClick","e","setPagetype","Toggle","aria-controls","Collapse","Nav","className","ty","Link","switchLink","pagetype","maps","google","GoogleMap","useState","map","setMap","markers","setMarkers","userMarker","setUserMarker","distMarker","setDistMarker","distMarkerClickedListener","setDistMarkerClickedListener","useEffect","_map","Map","document","getElementById","zoom","center","lat","lng","event","removeListener","addListener","handler","qa","_distMarker","Marker","position","latLng","animation","Animation","DROP","distInfo","InfoWindow","content","btn","createElement","innerText","addDomListener","alert","setContent","open","crd","latitude","longitude","panTo","setPosition","LatLng","_userMarker","BOUNCE","icon","path","SymbolPath","CIRCLE","fillColor","strokeColor","scale","uminfo","close","placelist","console","log","marker","places","place","label","name","style","height","width","Detail","Card","Img","src","Body","Title","Text","detail","getPosition","setFunc","navigator","geolocation","getCurrentPosition","pos","coords","Toast","closeButton","title","Math","round","dist","body","Toasts","group","credit","toasts","toast","index","key","HotpepperCredit","href","ListView","Row","margin","Object","keys","placelists","toObject","pl_key","Col","md","lg","get","pd","MapView","sm","selectedIndex","App","setPlacelists","setCrd","selectedGroup","setSelectedGroup","setSelectedIndex","getSometimes","msec","setTimeout","query","callbuck","query_str","reduce","pre","window","sc","type","process","parent","getElementsByTagName","parentNode","insertBefore","fetchHotPepper","range","order","json","shop_info","results","shop","origin","destination","Number","geometry","spherical","computeDistanceBetween","catch","sort","a","b","p","set","marginTop","Container","fluid","visibility","idx","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","URL","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.69c89044.chunk.js","sourcesContent":["import React from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport {PageType} from '../../App';\nimport './Header.css';\n\ntype HeaderProps = {\n  pagetype: PageType,\n  setPagetype: (ty: PageType) => void\n};\n\nconst Header: React.FC<HeaderProps> = (props) => {\n\n  const switchLink = (ty: PageType) => {\n    switch(ty){\n      case 'map':\n        return <Nav.Link onClick={(e: any) => props.setPagetype('list')}>List</Nav.Link>;\n      case 'list':\n        return <Nav.Link onClick={(e: any) => props.setPagetype('map')}>Map</Nav.Link>\n    }\n  };\n  return (\n    <Navbar fixed='top' id='Header' expand=\"lg\" variant='dark' >\n      <Navbar.Brand onClick={(e: any) => props.setPagetype('list')}>WWWelcome</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {switchLink(props.pagetype)}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n};\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport { PlaceList } from '../../App';\n\nconst maps = google.maps;\n\ntype GoogleMapProps = {\n  placelist: PlaceList | null,\n  crd: Coordinates | null,\n  setCrd: (crd: Coordinates | null) => void\n};\n\n\nconst GoogleMap: React.FC<GoogleMapProps> = (props) => {\n  const [map, setMap] = useState(null as google.maps.Map | null);\n  const [markers, setMarkers] = useState([] as google.maps.Marker[]);\n  const [userMarker, setUserMarker] = useState(null as google.maps.Marker | null);\n  const [distMarker, setDistMarker] = useState(null as google.maps.Marker | null);\n  const [distMarkerClickedListener, setDistMarkerClickedListener] = useState(null as null | google.maps.MapsEventListener);\n\n  useEffect(() => {\n    const _map = new maps.Map(document.getElementById('map')!, { zoom: 17, center: { lat: -25.344, lng: 131.036 } });\n    setMap(_map);\n  }, []);\n\n  useEffect(() => {\n    if(map){\n      if(distMarkerClickedListener){\n        maps.event.removeListener(distMarkerClickedListener);\n      }\n      setDistMarkerClickedListener(map.addListener('click', (handler: { latLng: google.maps.LatLng, event: google.maps.MouseEvent, pixel: { x: number, y: number } }, qa: { x: number, y: number }) => {\n        if (distMarker) {\n          distMarker.setMap(null);\n        }\n        const _distMarker = new maps.Marker({\n          position: handler.latLng,\n          animation: google.maps.Animation.DROP,\n          map: map\n        });\n        const distInfo = new google.maps.InfoWindow({content: ''});\n        const btn = document.createElement(\"button\");\n        btn.className = 'btn btn-primary';\n        btn.innerText = 'この周辺を探す';\n        google.maps.event.addDomListener(btn, \"click\", function () {\n          alert('clicked me!');\n        });\n        distInfo.setContent(btn);\n        distInfo.open(map, _distMarker);\n        setDistMarker(_distMarker);\n      }));\n    }\n  // eslint-disable-next-line\n  }, [map, distMarker]);\n\n  useEffect(() => {\n    if(map){\n      const crd = props.crd ? { lat: props.crd.latitude, lng: props.crd.longitude } : { lat: -25.344, lng: 131.036 };\n      map.panTo(crd);\n      if(!userMarker){\n        const _userMarker = new maps.Marker({\n          position: new maps.LatLng(crd),\n          animation: google.maps.Animation.BOUNCE,\n          icon: {\n            path: google.maps.SymbolPath.CIRCLE,\n            fillColor: 'blue',\n            strokeColor: 'blue',\n            scale: 8,\n          },\n          map: map\n        });\n        var uminfo = new google.maps.InfoWindow({\n          content: `\n        <div>現在地</div>\n        `\n        });\n        _userMarker.addListener('mouseover', () => { uminfo.open(map, _userMarker); });\n        _userMarker.addListener('mouseout', () => { uminfo.close(); });\n        _userMarker.addListener('mouseup', () => { uminfo.open(map, _userMarker); });\n        _userMarker.addListener('mousedown', () => { uminfo.open(map, _userMarker); });\n        setUserMarker(_userMarker);\n      }else{\n        if(props.crd){\n          userMarker.setPosition(new maps.LatLng(props.crd.latitude, props.crd.longitude));\n        }\n        \n      }\n    }\n  }, [props.crd, userMarker, map])\n  useEffect(() => {\n    if (map && props.placelist){\n      console.log(props.placelist)\n      markers.map((marker) => marker.setMap(null));\n      setMarkers(props.placelist.places.map((place) => new maps.Marker({\n        position: new maps.LatLng(place.crd),\n        label: place.name,\n        animation: google.maps.Animation.DROP,\n        map: map})))\n    }\n  // eslint-disable-next-line\n  }, [props.placelist, map]);\n  return (\n    <div id='map' style={{ height: '80vh', width: '100%'}}></div>\n  );\n};\n\nexport default GoogleMap;","import React from 'react';\nimport { PlaceData } from '../../App';\nimport { Card } from 'react-bootstrap';\n\nexport type DetailProps = {\n  place: PlaceData\n};\n\nconst Detail: React.FC<DetailProps> = (props) => {\n  return(\n    <Card>\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n      <Card.Body>\n        <Card.Title>{props.place.name}</Card.Title>\n        <Card.Text>{props.place.detail}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Detail;","\n\nexport const getPosition = (setFunc: (crd: Coordinates) => void) => {\n  const success: PositionCallback = (pos: Position) => {\n    setFunc(pos.coords);\n  };\n  const error: PositionErrorCallback = (e: PositionError) => {\n    console.log(e);\n  };\n  navigator.geolocation.getCurrentPosition(success, error);\n};\n\nexport const watchPosition = (setFunc: (crd: Coordinates) => void) => {\n  const success: PositionCallback = (pos: Position) => {\n    setFunc(pos.coords);\n  };\n  const error: PositionErrorCallback = (e: PositionError) => {\n    console.log(e);\n  };\n  navigator.geolocation.watchPosition(success, error);\n};\n","import React from 'react';\nimport { Toast as BToast } from 'react-bootstrap';\nimport \"./Toasts.css\";\n\nexport type ToastData = {\n  title: string;\n  dist: number;\n  body: string;\n};\n\nexport type ToastProps = ToastData & {\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n};\n\nconst Toast: React.FC<ToastProps> = (props: ToastProps) => {\n  return (\n    <BToast onClick={(e) => props.onClick(e)}>\n      <BToast.Header closeButton={false}>\n        <strong className='mr-auto'>{props.title}</strong>\n        <small>{`${Math.round(props.dist)} m`}</small>\n      </BToast.Header>\n      <BToast.Body>\n        {props.body}\n      </BToast.Body>\n    </BToast>\n  );\n};\n\nexport type ToastsProps = {\n  toasts: ToastData[];\n  group: string;\n  credit?: JSX.Element;\n  onClick: (idx: number) => void\n};\n\nconst Toasts: React.FC<ToastsProps> = (props: ToastsProps) => {\n  return (\n    <div className=\"toasts\">\n      <BToast className=\"Group-header\">\n        <BToast.Body>\n          <strong className='mr-auto'>{props.group}</strong>\n          <small>{props.credit}</small>\n        </BToast.Body>\n      </BToast>\n      {props.toasts.map((toast, index) => <Toast key={index} onClick={(e) => props.onClick(index)} {...toast}/>)}\n    </div>\n  );\n};\n\nexport default Toasts;\n","import React, { useState, useEffect } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport GoogleMap from './components/GoogleMap/GoogleMap';\nimport Detail from './components/Detail/Detail';\nimport { fetchHotPepper, HotPepperResult } from './logic/hotpepper';\nimport { getPosition } from './logic/geolocation';\nimport { calcDistance } from './logic/distance';\nimport Toasts from './components/Toasts/Toasts';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Map } from 'immutable'; \n\nconst HotpepperCredit = <> Powered by <a href=\"http://webservice.recruit.co.jp/\">ホットペッパー Webサービス</a> </>;\n\nexport type PageType = 'list' | 'map';\n\nexport type PlaceData = {\n  name: string,\n  detail: string,\n  dist: number,\n  crd: {lat: number, lng: number}\n};\n\nexport type PlaceList = {\n  group: string,\n  places: PlaceData[],\n  credit: JSX.Element\n}\n\ntype ListViewProps = {\n  placelists: Map<string, PlaceList>,\n  onClick: (group: string) => (idx: number) => void\n}\n\nconst ListView: React.FC<ListViewProps> = (props) => {\n  return(\n    <Row style={{ margin: 0 }}>\n      {Object.keys(props.placelists.toObject()).map((pl_key: string, key) => (\n        <Col key={key} md={6} lg={3}>\n          <Toasts toasts={props.placelists.get(pl_key)!.places.map((pd) => ({ title: pd.name, dist: pd.dist, body: pd.detail }))} group={props.placelists.get(pl_key)!.group} credit={props.placelists.get(pl_key)!.credit} onClick={props.onClick(props.placelists.get(pl_key)!.group)} />\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\ntype MapViewProps = {\n  placelist: PlaceList | null,\n  crd: Coordinates | null,\n  selectedIndex: number | null,\n  setCrd: (crd: Coordinates | null) => void\n};\n\nconst MapView: React.FC<MapViewProps> = (props) => {\n  return (\n    <Row>\n      <Col sm={12} md={8}>\n        <GoogleMap {...props}/>\n      </Col>\n      <Col sm={12} md={4}>\n        {((props.selectedIndex !== null) && props.placelist) ? <Detail place={props.placelist.places[props.selectedIndex]}/> : null}\n      </Col>\n    </Row>\n  )\n};\n\nconst App: React.FC = () => {\n  const [placelists, setPlacelists] = useState(Map({}) as Map<string, PlaceList>);\n  const [pagetype, setPagetype] = useState('list' as PageType);\n  const [crd, setCrd] = useState(null as Coordinates | null);\n  const [selectedGroup, setSelectedGroup] = useState(null as null | string);\n  const [selectedIndex, setSelectedIndex] = useState(null as null | number);\n\n  useEffect(() => {\n    getPosition(setCrd);\n    const getSometimes = (msec: number) => {\n      setTimeout(() => {\n        getPosition(setCrd);\n        getSometimes(msec);\n      }, msec);\n    };\n    getSometimes(30000);\n  }, []);\n\n  useEffect(() => {\n    if(crd){\n      fetchHotPepper({ lat: crd.latitude, lng: crd.longitude, range: 5, order: 4 }, (json: HotPepperResult) => {\n        console.log(json);\n        const shop_info: PlaceData[] = json.results.shop.map((shop) => {\n          return { name: shop.name, dist: calcDistance({ lat: crd.latitude, lng: crd.longitude }, { lat: Number(shop.lat), lng: Number(shop.lng) }), detail: shop.catch, crd: { lat: Number(shop.lat), lng: Number(shop.lng) } }\n        });\n        shop_info.sort((a, b) => {\n          if (a.dist < b.dist) {\n            return -1;\n          } else if (a.dist > b.dist) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        setPlacelists(p => p.set('付近の飲食店', { group: '付近の飲食店', places: shop_info, credit: HotpepperCredit }))\n      });\n    }\n    \n  }, [crd]);\n\n  const onListClick = (group: string) => (idx: number) => {\n    setPagetype('map');\n    setSelectedGroup(group);\n    setSelectedIndex(idx);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header pagetype={pagetype} setPagetype={setPagetype}/>\n      <div style={{marginTop: '56px'}}>\n        <Container fluid={true} style={{ visibility: pagetype === 'list' ? 'visible' : 'hidden', position: 'absolute'}} >\n          <ListView placelists={placelists} onClick={onListClick}/>\n        </Container>\n        <Container fluid={true} style={{ visibility: pagetype === 'map' ? 'visible' : 'hidden', position: 'absolute', width: '100%', height: '100%'}} >\n          <MapView placelist={selectedGroup ? placelists.get(selectedGroup)! : null} selectedIndex={selectedIndex} crd={crd} setCrd={setCrd} />\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// Hot Pepper API ( https://webservice.recruit.co.jp/hotpepper/reference.html )\n\nexport type HotPepperQuery = {\n  lat?: number,\n  lng?: number,\n  range?: number,\n  order?: number\n};\n\nexport type HotPepperResult = {\n  results: {\n    api_version: string;\n    results_available: number;\n    results_returned: number;\n    results_start: number;\n    shop: Shop[];\n  }\n};\n\ntype Shop = {\n  id: string,\n  name: string;\n  logo_image: string,\n  name_kana: string,\n  address: string,\n  station_name: string,\n  ktai_coupon: number,\n  lat: number;\n  lng: number;\n  catch: string;\n  photo: {pc: {l: string, m:string, s: string}}\n};\n\nexport const fetchHotPepper = (query: HotPepperQuery, callbuck: (json: HotPepperResult) => void) => {\n  const query_str = Object.keys(query).reduce((pre:string, key: string) => `${pre}&${key}=${query[key as keyof HotPepperQuery]}`, '');\n  (window as any)['HotPepperCallBack'] = callbuck;\n  const sc = document.createElement(\"script\");\n  sc.type = 'text/javascript';\n  sc.src = `https://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${process.env['REACT_APP_HOTPEPPER_API_KEY']}${query_str}&format=jsonp&callback=HotPepperCallBack`;\n  const parent = document.getElementsByTagName(\"script\")[0];\n  parent!.parentNode!.insertBefore(sc, parent);\n};","\nexport const calcDistance = (origin: { lat: number, lng: number }, destination: { lat: number, lng: number }) => {\n  return google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(origin.lat, origin.lng), new google.maps.LatLng(destination.lat, destination.lng));\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}